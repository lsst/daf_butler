storageClasses:
  int:
    pytype: int
  StructuredDataDict:
    pytype: dict
    converters:
      lsst.pipe.base.TaskMetadata: lsst.pipe.base.TaskMetadata.to_dict
  StructuredDataList:
    pytype: list
  TablePersistable:
    pytype: lsst.afw.table.io.Persistable
  Wcs:
    pytype: lsst.afw.geom.skyWcs.SkyWcs
  Psf:
    pytype: lsst.afw.detection.Psf
  CoaddInputs:
    pytype: lsst.afw.image.CoaddInputs
  VisitInfo:
    pytype: lsst.afw.image.VisitInfo
  ApCorr:
    pytype: lsst.afw.image.ApCorrMap
  PhotoCalib:
    pytype: lsst.afw.image.PhotoCalib
  TransmissionCurve:
    pytype: lsst.afw.image.TransmissionCurve
    converters:
      lsst.ip.isr.IntermediateTransmissionCurve: lsst.ip.isr.IntermediateTransmissionCurve.getTransmissionCurve
      lsst.ip.isr.IntermediateFilterTransmissionCurve: lsst.ip.isr.IntermediateFilterTransmissionCurve.getTransmissionCurve
      lsst.ip.isr.IntermediateSensorTransmissionCurve: lsst.ip.isr.IntermediateSensorTransmissionCurve.getTransmissionCurve
      lsst.ip.isr.IntermediateOpticsTransmissionCurve: lsst.ip.isr.IntermediateOpticsTransmissionCurve.getTransmissionCurve
      lsst.ip.isr.IntermediateAtmosphereTransmissionCurve: lsst.ip.isr.IntermediateAtmosphereTransmissionCurve.getTransmissionCurve
      lsst.ip.isr.IntermediateSystemTransmissionCurve: lsst.ip.isr.IntermediateSystemTransmissionCurve.getTransmissionCurve
  ExposureSummaryStats:
    pytype: lsst.afw.image.ExposureSummaryStats
  Camera:
    pytype: lsst.afw.cameraGeom.Camera
  Detector:
    pytype: lsst.afw.cameraGeom.Detector
  Box2I:
    pytype: lsst.geom.Box2I
  Extent2I:
    pytype: lsst.geom.Extent2I
  Point2I:
    pytype: lsst.geom.Point2I
  Image: &Image
    pytype: lsst.afw.image.Image
    delegate: lsst.obs.base.exposureAssembler.ExposureAssembler
    parameters:
      # Load a subimage defined by this box (`lsst.afw.geom.Box2I`).
      - bbox

      # Coordinate system for ``bbox`` (`lsst.afw.image.ImageOrigin`)
      #
      # Defaults to ``PARENT``.  Ignored if ``bbox`` is not present.
      - origin

  ImageF:
    inheritsFrom: Image
    pytype: lsst.afw.image.ImageF
  ImageI:
    inheritsFrom: Image
    pytype: lsst.afw.image.ImageI
  ImageU:
    inheritsFrom: Image
    pytype: lsst.afw.image.ImageU
  DecoratedImage:
    pytype: lsst.afw.image.DecoratedImage
  DecoratedImageU:
    inheritsFrom: DecoratedImage
    pytype: lsst.afw.image.DecoratedImageU
  Mask:
    pytype: lsst.afw.image.Mask
    delegate: lsst.obs.base.exposureAssembler.ExposureAssembler
    parameters:
      # Load a subimage defined by this box (`lsst.afw.geom.Box2I`).
      - bbox

      # Coordinate system for ``bbox`` (`lsst.afw.image.ImageOrigin`)
      #
      # Defaults to ``PARENT``.  Ignored if ``bbox`` is not present.
      - origin
  MaskX:
    inheritsFrom: Mask
    pytype: lsst.afw.image.MaskX
  MaskedImage:
    pytype: lsst.afw.image.MaskedImage
    delegate: lsst.obs.base.exposureAssembler.ExposureAssembler
    parameters:
      # Load a subimage defined by this box (`lsst.afw.geom.Box2I`).
      - bbox

      # Coordinate system for ``bbox`` (`lsst.afw.image.ImageOrigin`)
      #
      # Defaults to ``PARENT``.  Ignored if ``bbox`` is not present.
      - origin
    components:
      image: Image
      mask: Mask
      variance: Image
  MaskedImageF:
    inheritsFrom: MaskedImage
    pytype: lsst.afw.image.MaskedImageF
  MaskedImageU:
    inheritsFrom: MaskedImage
    pytype: lsst.afw.image.MaskedImageU
  MaskedImageI:
    inheritsFrom: MaskedImage
    pytype: lsst.afw.image.MaskedImageI
  Catalog:
    pytype: lsst.afw.table.BaseCatalog
  PeakCatalog:
    pytype: lsst.afw.detection.PeakCatalog
  Polygon:
    pytype: lsst.afw.geom.Polygon
  SimpleCatalog:
    pytype: lsst.afw.table.SimpleCatalog
  SourceCatalog:
    pytype: lsst.afw.table.SourceCatalog
  ObjectMaskCatalog:
    pytype: lsst.pipe.tasks.objectMasks.ObjectMaskCatalog
  ExposureCatalog:
    pytype: lsst.afw.table.ExposureCatalog
  DataFrame:
    pytype: pandas.core.frame.DataFrame
    converters:
      pyarrow.Table: lsst.daf.butler.formatters.parquet.arrow_to_pandas
      astropy.table.Table: lsst.daf.butler.formatters.parquet.astropy_to_pandas
      numpy.ndarray: pandas.DataFrame.from_records
      dict: pandas.DataFrame.from_records
    delegate: lsst.daf.butler.delegates.arrowtable.ArrowTableDelegate
    derivedComponents:
      columns: DataFrameIndex
      rowcount: int
      schema: DataFrameSchema
    parameters:
      - columns
      - filters
  DataFrameIndex:
    pytype: pandas.Index
    converters:
      pyarrow.Schema: lsst.daf.butler.formatters.parquet.arrow_schema_to_pandas_index
      list: pandas.Index
  DataFrameSchema:
    pytype: lsst.daf.butler.formatters.parquet.DataFrameSchema
    converters:
      pyarrow.Schema: lsst.daf.butler.formatters.parquet.DataFrameSchema.from_arrow
      lsst.daf.butler.formatters.parquet.ArrowAstropySchema: lsst.daf.butler.formatters.parquet.ArrowAstropySchema.to_dataframe_schema
      lsst.daf.butler.formatters.parquet.ArrowNumpySchema: lsst.daf.butler.formatters.parquet.ArrowNumpySchema.to_dataframe_schema
  ArrowTable:
    pytype: pyarrow.lib.Table
    converters:
      pandas.core.frame.DataFrame: lsst.daf.butler.formatters.parquet.pandas_to_arrow
      astropy.table.Table: lsst.daf.butler.formatters.parquet.astropy_to_arrow
      numpy.ndarray: lsst.daf.butler.formatters.parquet.numpy_to_arrow
      dict: lsst.daf.butler.formatters.parquet.numpy_dict_to_arrow
    delegate: lsst.daf.butler.delegates.arrowtable.ArrowTableDelegate
    derivedComponents:
      columns: ArrowColumnList
      rowcount: int
      schema: ArrowSchema
    parameters:
      - columns
      - filters
  ArrowColumnList:
    pytype: list
    converters:
      pyarrow.Schema: lsst.daf.butler.formatters.parquet.arrow_schema_to_column_list
      pandas.Index: pandas.Index.to_list
  ArrowSchema:
    pytype: pyarrow.Schema
    converters:
      lsst.daf.butler.formatters.parquet.DataFrameSchema: lsst.daf.butler.formatters.parquet.DataFrameSchema.to_arrow_schema
      lsst.daf.butler.formatters.parquet.ArrowAstropySchema: lsst.daf.butler.formatters.parquet.ArrowAstropySchema.to_arrow_schema
      lsst.daf.butler.formatters.parquet.ArrowNumpySchema: lsst.daf.butler.formatters.parquet.ArrowNumpySchema.to_arrow_schema
  ArrowAstropy:
    pytype: astropy.table.Table
    converters:
      pyarrow.Table: lsst.daf.butler.formatters.parquet.arrow_to_astropy
      pandas.core.frame.DataFrame: lsst.daf.butler.formatters.parquet.pandas_to_astropy
      numpy.ndarray: lsst.daf.butler.formatters.parquet.numpy_to_astropy
      dict: astropy.table.Table
    delegate: lsst.daf.butler.delegates.arrowtable.ArrowTableDelegate
    derivedComponents:
      columns: ArrowColumnList
      rowcount: int
      schema: ArrowAstropySchema
    parameters:
      - columns
      - filters
  ArrowAstropySchema:
    pytype: lsst.daf.butler.formatters.parquet.ArrowAstropySchema
    converters:
      pyarrow.Schema: lsst.daf.butler.formatters.parquet.ArrowAstropySchema.from_arrow
      lsst.daf.butler.formatters.parquet.DataFrameSchema: lsst.daf.butler.formatters.parquet.DataFrameSchema.to_arrow_astropy_schema
      lsst.daf.butler.formatters.parquet.ArrowNumpySchema: lsst.daf.butler.formatters.parquet.ArrowNumpySchema.to_arrow_astropy_schema
  ArrowNumpy:
    pytype: numpy.ndarray
    converters:
      pyarrow.Table: lsst.daf.butler.formatters.parquet.arrow_to_numpy
      pandas.core.frame.DataFrame: pandas.DataFrame.to_records
      astropy.table.Table: astropy.table.Table.as_array
      dict: lsst.daf.butler.formatters.parquet._numpy_dict_to_numpy
    delegate: lsst.daf.butler.delegates.arrowtable.ArrowTableDelegate
    derivedComponents:
      columns: ArrowColumnList
      rowcount: int
      schema: ArrowNumpySchema
    parameters:
      - columns
      - filters
  ArrowNumpySchema:
    pytype: lsst.daf.butler.formatters.parquet.ArrowNumpySchema
    converters:
      pyarrow.Schema: lsst.daf.butler.formatters.parquet.ArrowNumpySchema.from_arrow
      lsst.daf.butler.formatters.parquet.DataFrameSchema: lsst.daf.butler.formatters.parquet.DataFrameSchema.to_arrow_numpy_schema
      lsst.daf.butler.formatters.parquet.ArrowAstropySchema: lsst.daf.butler.formatters.parquet.ArrowAstropySchema.to_arrow_numpy_schema
  ArrowNumpyDict:
    pytype: dict
    converters:
      pyarrow.Table: lsst.daf.butler.formatters.parquet.arrow_to_numpy_dict
      pandas.core.frame.DataFrame: lsst.daf.butler.formatters.parquet._pandas_to_numpy_dict
      astropy.table.Table: lsst.daf.butler.formatters.parquet._astropy_to_numpy_dict
      numpy.ndarray: lsst.daf.butler.formatters.parquet._numpy_to_numpy_dict
    delegate: lsst.daf.butler.delegates.arrowtable.ArrowTableDelegate
    derivedComponents:
      columns: ArrowColumnList
      rowcount: int
      schema: ArrowNumpySchema
    parameters:
      - columns
      - filters
  SkyMap:
    pytype: lsst.skymap.BaseSkyMap
  PropertySet:
    pytype: lsst.daf.base.PropertySet
    converters:
      lsst.pipe.base.TaskMetadata: lsst.daf.base.PropertySet.from_mapping
  PropertyList:
    pytype: lsst.daf.base.PropertyList
  IsrCalib:
    pytype: lsst.ip.isr.IsrCalib
  Defects:
    pytype: lsst.ip.isr.Defects
  QECurve:
    pytype: lsst.meas.algorithms.Curve
  CrosstalkCalib:
    pytype: lsst.ip.isr.CrosstalkCalib
  Linearizer:
    pytype: lsst.ip.isr.Linearizer
  FiberSpectrum:
    pytype: lsst.obs.fiberspectrograph.FiberSpectrum
  PhotonTransferCurveDataset:
    pytype: lsst.ip.isr.PhotonTransferCurveDataset
  StrayLightData:
    pytype: lsst.ip.isr.StrayLightData
  BrighterFatterKernel:
    pytype: lsst.ip.isr.BrighterFatterKernel
  MatchingKernel:
    pytype: lsst.afw.math.Kernel
  FilterLabel:
    pytype: lsst.afw.image.FilterLabel
  Exposure:
    pytype: lsst.afw.image.Exposure
    delegate: lsst.obs.base.exposureAssembler.ExposureAssembler
    parameters:

      # Load a subimage defined by this box (`lsst.afw.geom.Box2I`).
      - bbox

      # Coordinate system for ``bbox`` (`lsst.afw.image.ImageOrigin`)
      #
      # Defaults to ``PARENT``.  Ignored if ``bbox`` is not present.
      - origin

      # Amplifier whose subimage to load (`int` ID, `str` name, or
      # `lsst.afw.cameraGeom.Amplifier`).
      #
      # If the on-disk dataset does not have a detector associated with it, the
      # ``detector`` parameter must be provided as well.  (raw images should
      # always have their own detector; other images have a detector if and
      # only if one was attached to them before they were saved).
      #
      # If an `~lsst.afw.cameraGeom.Amplifier` is given, the loaded image will
      # have a single-amp `lsst.afw.cameraGeom.Detector` attached, containing
      # exactly that amplifier (with the image filled accordingly).
      # `ValueError` is raised if the amplifiers have fundamentally
      # inconsistent geometry (i.e.  cannot be reconciled by flipping).
      #
      # If an `int` amplifier ID or `str` name is given, the orientation of the
      # image is implementation-defined, but will be reflected in the "raw
      # flip" attributes of the only amplifier in its attached detector.
      #
      # In all cases the trim state of the returned image is exactly the same
      # as how the image was saved (raws are untrimmed).
      - amp

      # Full detector to use when loading amplifiers
      # (`lsst.afw.cameraGeom.Detector`).
      #
      # Must be provided when the on-disk dataset does not have its own detector
      # and ``amp`` is passed; ignored otherwise.  When provided, its amplifier
      # orientations (encoded in the "raw flip" attributes) must be consistent
      # with the on-disk image.
      - detector

    components:
      image: Image
      mask: Mask
      variance: Image
      wcs: Wcs
      psf: Psf
      photoCalib: PhotoCalib
      visitInfo: VisitInfo
      apCorrMap: ApCorr
      coaddInputs: CoaddInputs
      transmissionCurve: TransmissionCurve
      metadata: PropertyList
      filter: FilterLabel
      detector: Detector
      validPolygon: Polygon
      summaryStats: ExposureSummaryStats
      id: int
    derivedComponents:
      bbox: Box2I
      dimensions: Extent2I
      xy0: Point2I
  ExposureF:
    inheritsFrom: Exposure
    pytype: lsst.afw.image.ExposureF
    components:
      image: ImageF
      mask: MaskX
      variance: ImageF
  ExposureI:
    inheritsFrom: Exposure
    pytype: lsst.afw.image.ExposureI
    components:
      image: ImageI
      mask: MaskX
      variance: ImageF
  ExposureU:
    inheritsFrom: Exposure
    pytype: lsst.afw.image.ExposureU
    components:
      image: ImageU
      mask: MaskX
      variance: ImageF
  Background:
    pytype: lsst.afw.math.BackgroundList
  FocalPlaneBackground:
    pytype: lsst.pipe.tasks.background.FocalPlaneBackground
    converters:
      lsst.pipe.drivers.background.FocalPlaneBackground: lsst.pipe.tasks.background.FocalPlaneBackground.fromSimilar
  Config:
    pytype: lsst.pex.config.Config
  Packages:
    pytype: lsst.utils.packages.Packages
    converters:
      dict: lsst.utils.packages.Packages
  NumpyArray:
    pytype: numpy.ndarray
  Thumbnail:
    pytype: numpy.ndarray
  Plot:
    pytype: matplotlib.figure.Figure
  MetricValue:
    pytype: lsst.verify.Measurement
  StampsBase:
    pytype: lsst.meas.algorithms.stamps.StampsBase
    parameters:
      - bbox
  Stamps:
    pytype: lsst.meas.algorithms.Stamps
    parameters:
      - bbox
  BrightStarStamps:
    pytype: lsst.meas.algorithms.brightStarStamps.BrightStarStamps
    parameters:
      - bbox
  AstropyTable:
    pytype: astropy.table.Table
    converters:
      lsst.afw.table.Catalog: lsst.afw.table.Catalog.asAstropy
  AstropyQTable:
    pytype: astropy.table.QTable
  ExtendedPsf:
    pytype: lsst.pipe.tasks.extended_psf.ExtendedPsf
  HealSparseCoverage:
    pytype: healsparse.HealSparseCoverage
  HealSparseMap:
    pytype: healsparse.HealSparseMap
    derivedComponents:
      coverage: HealSparseCoverage
    parameters:
      - pixels
      - degrade_nside
  ButlerLogRecords:
    pytype: lsst.daf.butler.ButlerLogRecords
  TaskMetadata:
    pytype: lsst.pipe.base.TaskMetadata
    converters:
      # Compatible python types.
      lsst.daf.base.PropertySet: lsst.pipe.base.TaskMetadata.from_metadata
  SpectractorSpectrum:
    pytype: spectractor.extractor.spectrum.Spectrum
  SpectractorImage:
    pytype: spectractor.extractor.images.Image
  SpectractorFitParameters:
    pytype: spectractor.fit.fitter.FitParameters
  ScarletModelData:
    pytype: lsst.scarlet.lite.io.ScarletModelData
  MetricMeasurementBundle:
    pytype: lsst.analysis.tools.interfaces.MetricMeasurementBundle
  MultipleCellCoadd:
    pytype: lsst.cell_coadds.MultipleCellCoadd
  NNModelPackagePayload:
    pytype: lsst.meas.transiNet.modelPackages.formatters.NNModelPackagePayload
  Timespan:
    pytype: lsst.daf.butler.Timespan
  RegionTimeInfo:
    pytype: lsst.pipe.base.utils.RegionTimeInfo
  QPEnsemble:
    pytype: qp.Ensemble
  PZModel:
    pytype: rail.core.model.Model
  VisitBackgroundModel:
    pytype: lsst.drp.tasks.fit_visit_background.VisitBackgroundModel
