# This file is part of daf_butler.
#
# Developed for the LSST Data Management System.
# This product includes software developed by the LSST Project
# (http://www.lsst.org).
# See the COPYRIGHT file at the top-level directory of this distribution
# for details of code ownership.
#
# This software is dual licensed under the GNU General Public License and also
# under a 3-clause BSD license. Recipients may choose which of these licenses
# to use; please see the files gpl-3.0.txt and/or bsd_license.txt,
# respectively.  If you choose the GPL option then the following text applies
# (but note that there is still no warranty even if you opt for BSD instead):
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

name: Docker
on:
  pull_request: {}
  push:
    tags:
      - "*"

jobs:
  docker:
    strategy:
      matrix:
        platform:
          - arch: "amd64"
            runs_on: "ubuntu-latest"
          - arch: "arm64"
            runs_on: "ubuntu-24.04-arm"
    runs-on: ${{ matrix.platform.runs_on }}
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write
    outputs:
      tag: ${{ steps.build.outputs.tag}}

    steps:
      - uses: actions/checkout@v5
        with:
          # Needed to fetch tags, used by Python install process to
          # figure out version number
          fetch-depth: 0

      - uses: lsst-sqre/build-and-push-to-ghcr@v1
        id: build
        with:
          image: ${{ github.repository }}-${{ matrix.platform.arch }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  unify:
    needs: [docker]
    runs-on: ubuntu-latest
    env:
      tag:
        ${{ needs.docker.outputs.tag }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build multi-platform manifest
        uses: Noelware/docker-manifest-action@v1
        with:
          inputs: ghcr.io/${{ github.repository }}-amd64:${{ env.tag }},ghcr.io/${{ github.repository }}-arm64:${{ env.tag }}
          tags: ghcr.io/${{ github.repository }}:${{ env.tag }}
          push: true

  test:
    needs: [docker, unify]
    strategy:
      matrix:
        platform:
          - arch: "amd64"
            runs_on: "ubuntu-latest"
          - arch: "arm64"
            runs_on: "ubuntu-24.04-arm"
    runs-on: ${{ matrix.platform.runs_on }}
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write
    env:
      tag: ${{ needs.docker.outputs.tag }}

    steps:
      - name: Install system dependency to build psycopg on ARM
        if: ${{ matrix.platform.arch }} == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev

      - uses: actions/checkout@v5
        with:
          # Needed to fetch tags, used by Python install process to
          # figure out version number
          fetch-depth: 0

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker buildx setup
        uses: docker/setup-buildx-action@v3
        with:
          name: builder-${{ matrix.platform.arch }}
          platforms: linux/${{ matrix.platform.arch }}

      - name: Run unit tests inside Docker
        uses: docker/build-push-action@v6
        with:
          context: .
          # In addition to the main output image, the Dockerfile contains a second
          # "unit-test" image that runs the test suite.
          target: unit-test
          builder: builder-${{ matrix.platform.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Install dependencies
        run: |
          uv pip install --system --upgrade setuptools wheel build
          uv pip install --system -r requirements.txt
          uv pip install --system testcontainers

      - name: Install Butler client
        run: |
          uv pip install --system -v --no-deps -e .

      - name: Run smoke test
        run: |
          export BUTLER_SERVER_DOCKER_IMAGE=ghcr.io/${{ github.repository }}:${{ env.tag }}
          python tests_integration/test_docker_container.py
